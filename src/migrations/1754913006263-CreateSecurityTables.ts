import { MigrationInterface, QueryRunner } from "typeorm";

export class CreateSecurityTables1754913006263 implements MigrationInterface {
    name = 'CreateSecurityTables1754913006263'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TYPE "public"."analytics_type_enum" AS ENUM('travel_overview', 'travel_members', 'travel_activity', 'travel_engagement', 'travel_growth', 'planet_activity', 'planet_messages', 'planet_engagement', 'planet_performance', 'user_activity', 'user_engagement', 'user_journey', 'system_performance', 'system_usage')`);
        await queryRunner.query(`CREATE TYPE "public"."analytics_period_enum" AS ENUM('hourly', 'daily', 'weekly', 'monthly', 'yearly')`);
        await queryRunner.query(`CREATE TABLE "analytics" ("id" SERIAL NOT NULL, "type" "public"."analytics_type_enum" NOT NULL, "entityType" character varying(50) NOT NULL, "entityId" integer NOT NULL, "period" "public"."analytics_period_enum" NOT NULL, "date" date NOT NULL, "metrics" json NOT NULL, "dimensions" json, "comparison" json, "forecast" json, "label" character varying(100), "description" text, "metadata" json, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_3c96dcbf1e4c57ea9e0c3144bff" PRIMARY KEY ("id")); COMMENT ON COLUMN "analytics"."type" IS '분석 데이터 타입'; COMMENT ON COLUMN "analytics"."entityType" IS '대상 엔티티 타입 (travel, planet, user 등)'; COMMENT ON COLUMN "analytics"."entityId" IS '대상 엔티티 ID'; COMMENT ON COLUMN "analytics"."period" IS '집계 주기'; COMMENT ON COLUMN "analytics"."date" IS '집계 날짜'; COMMENT ON COLUMN "analytics"."metrics" IS '집계된 메트릭 데이터 (JSON)'; COMMENT ON COLUMN "analytics"."dimensions" IS '차원별 분석 데이터 (JSON)'; COMMENT ON COLUMN "analytics"."comparison" IS '이전 기간 대비 변화량 (JSON)'; COMMENT ON COLUMN "analytics"."forecast" IS '예측/전망 데이터 (JSON)'; COMMENT ON COLUMN "analytics"."label" IS '분석 데이터 제목/라벨'; COMMENT ON COLUMN "analytics"."description" IS '분석 데이터 설명'; COMMENT ON COLUMN "analytics"."metadata" IS '추가 메타데이터 (JSON)'; COMMENT ON COLUMN "analytics"."createdAt" IS '분석 데이터 생성 시간'; COMMENT ON COLUMN "analytics"."updatedAt" IS '분석 데이터 수정 시간'`);
        await queryRunner.query(`CREATE INDEX "IDX_0f60eaca1334fca31ef3c28588" ON "analytics" ("entityType") `);
        await queryRunner.query(`CREATE INDEX "IDX_7ed6d4b0e2e5467752cb14a44d" ON "analytics" ("entityId") `);
        await queryRunner.query(`CREATE INDEX "IDX_19da8ae5e50dce0825eeaf1d1f" ON "analytics" ("date") `);
        await queryRunner.query(`CREATE INDEX "IDX_7ddb1767051ba238bb698c3e08" ON "analytics" ("type", "period", "date") `);
        await queryRunner.query(`CREATE INDEX "IDX_efb0bbda7c7b63593f3b65db2d" ON "analytics" ("entityType", "entityId", "date") `);
        await queryRunner.query(`CREATE INDEX "IDX_a8d9e131a97cc6e9d00979720c" ON "analytics" ("type", "entityType", "entityId", "period") `);
        await queryRunner.query(`CREATE INDEX "IDX_19da8ae5e50dce0825eeaf1d1f" ON "analytics" ("date") `);
        await queryRunner.query(`CREATE INDEX "IDX_7f7b67c0ae5e101b71e86a0cf5" ON "analytics" ("period") `);
        await queryRunner.query(`CREATE INDEX "IDX_aabb82adb6a7a3163667b5b486" ON "analytics" ("entityType", "entityId") `);
        await queryRunner.query(`CREATE INDEX "IDX_2de1d3124c07ed32d4c9e0c2a6" ON "analytics" ("type") `);
        await queryRunner.query(`CREATE TYPE "public"."notifications_type_enum" AS ENUM('message_received', 'message_mention', 'message_reply', 'message_edited', 'message_deleted', 'travel_invitation', 'travel_join_request', 'travel_member_joined', 'travel_member_left', 'travel_expiry_warning', 'travel_expired', 'travel_updated', 'travel_deleted', 'planet_created', 'planet_invitation', 'planet_member_joined', 'planet_member_left', 'planet_updated', 'planet_deleted', 'user_banned', 'user_unbanned', 'user_role_changed', 'system_announcement', 'system_maintenance', 'system_update')`);
        await queryRunner.query(`CREATE TYPE "public"."notifications_priority_enum" AS ENUM('low', 'normal', 'high', 'urgent')`);
        await queryRunner.query(`CREATE TYPE "public"."notifications_status_enum" AS ENUM('pending', 'sent', 'delivered', 'read', 'failed', 'cancelled')`);
        await queryRunner.query(`CREATE TABLE "notifications" ("id" SERIAL NOT NULL, "userId" integer NOT NULL, "type" "public"."notifications_type_enum" NOT NULL, "title" character varying(100) NOT NULL, "content" text NOT NULL, "priority" "public"."notifications_priority_enum" NOT NULL DEFAULT 'normal', "status" "public"."notifications_status_enum" NOT NULL DEFAULT 'pending', "isRead" boolean NOT NULL DEFAULT false, "readAt" TIMESTAMP, "travelId" integer, "planetId" integer, "messageId" integer, "triggeredBy" integer, "channels" json NOT NULL, "deliveryResults" json, "scheduledAt" TIMESTAMP, "expiresAt" TIMESTAMP, "data" json, "metadata" json, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_6a72c3c0f683f6462415e653c3a" PRIMARY KEY ("id")); COMMENT ON COLUMN "notifications"."userId" IS '알림 받을 사용자 ID'; COMMENT ON COLUMN "notifications"."type" IS '알림 타입'; COMMENT ON COLUMN "notifications"."title" IS '알림 제목'; COMMENT ON COLUMN "notifications"."content" IS '알림 내용'; COMMENT ON COLUMN "notifications"."priority" IS '알림 우선순위'; COMMENT ON COLUMN "notifications"."status" IS '알림 상태'; COMMENT ON COLUMN "notifications"."isRead" IS '읽음 여부'; COMMENT ON COLUMN "notifications"."readAt" IS '읽은 시간'; COMMENT ON COLUMN "notifications"."travelId" IS '관련 Travel ID'; COMMENT ON COLUMN "notifications"."planetId" IS '관련 Planet ID'; COMMENT ON COLUMN "notifications"."messageId" IS '관련 메시지 ID'; COMMENT ON COLUMN "notifications"."triggeredBy" IS '알림 발생시킨 사용자 ID'; COMMENT ON COLUMN "notifications"."channels" IS '전송할 채널 목록'; COMMENT ON COLUMN "notifications"."deliveryResults" IS '채널별 전송 결과'; COMMENT ON COLUMN "notifications"."scheduledAt" IS '예약 전송 시간'; COMMENT ON COLUMN "notifications"."expiresAt" IS '알림 만료 시간'; COMMENT ON COLUMN "notifications"."data" IS '알림 관련 추가 데이터 (JSON)'; COMMENT ON COLUMN "notifications"."metadata" IS '알림 메타데이터 (JSON)'; COMMENT ON COLUMN "notifications"."createdAt" IS '알림 생성 시간'; COMMENT ON COLUMN "notifications"."updatedAt" IS '알림 정보 수정 시간'`);
        await queryRunner.query(`CREATE INDEX "IDX_692a909ee0fa9383e7859f9b40" ON "notifications" ("userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_aef1c7aef3725068e5540f8f00" ON "notifications" ("type") `);
        await queryRunner.query(`CREATE INDEX "IDX_8ba28344602d583583b9ea1a50" ON "notifications" ("isRead") `);
        await queryRunner.query(`CREATE INDEX "IDX_357d60c1b7e4a2e9466d6ff356" ON "notifications" ("travelId") `);
        await queryRunner.query(`CREATE INDEX "IDX_0c92fb969e67cbf7208462ebc0" ON "notifications" ("planetId") `);
        await queryRunner.query(`CREATE INDEX "IDX_b3bff6ef995abfa317b8ec8699" ON "notifications" ("scheduledAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_5d06d6169ad1f3d8f83d63902b" ON "notifications" ("planetId", "type") `);
        await queryRunner.query(`CREATE INDEX "IDX_3363924e627d40f4b945c3276f" ON "notifications" ("travelId", "type") `);
        await queryRunner.query(`CREATE INDEX "IDX_ab221329a9f4c2111690d52f34" ON "notifications" ("status", "scheduledAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_8cfc4757bd393ac9aec5dde530" ON "notifications" ("userId", "type", "createdAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_78207b2dc2b0d717649e89d3fc" ON "notifications" ("userId", "status") `);
        await queryRunner.query(`CREATE INDEX "IDX_5340fc241f57310d243e5ab20b" ON "notifications" ("userId", "isRead") `);
        await queryRunner.query(`CREATE INDEX "IDX_b3bff6ef995abfa317b8ec8699" ON "notifications" ("scheduledAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_831a5a06f879fb0bebf8965871" ON "notifications" ("createdAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_8ba28344602d583583b9ea1a50" ON "notifications" ("isRead") `);
        await queryRunner.query(`CREATE INDEX "IDX_1d992705797d7d2d5a3853ad9c" ON "notifications" ("priority") `);
        await queryRunner.query(`CREATE INDEX "IDX_92f5d3a7779be163cbea7916c6" ON "notifications" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_aef1c7aef3725068e5540f8f00" ON "notifications" ("type") `);
        await queryRunner.query(`CREATE INDEX "IDX_692a909ee0fa9383e7859f9b40" ON "notifications" ("userId") `);
        await queryRunner.query(`CREATE TYPE "public"."performance_metrics_type_enum" AS ENUM('api_response_time', 'database_query_time', 'cache_hit_rate', 'file_upload_speed', 'file_download_speed', 'file_processing_time', 'websocket_connection', 'memory_usage', 'cpu_usage', 'disk_usage', 'error_rate', 'concurrent_users')`);
        await queryRunner.query(`CREATE TYPE "public"."performance_metrics_category_enum" AS ENUM('api', 'database', 'cache', 'file_storage', 'websocket', 'system', 'error', 'user')`);
        await queryRunner.query(`CREATE TABLE "performance_metrics" ("id" SERIAL NOT NULL, "type" "public"."performance_metrics_type_enum" NOT NULL, "category" "public"."performance_metrics_category_enum" NOT NULL, "resourceType" character varying(50), "resourceId" bigint, "value" numeric(10,4) NOT NULL, "unit" character varying(20) NOT NULL DEFAULT 'ms', "metadata" jsonb, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_66237d8c606d64c7bd44a91f74a" PRIMARY KEY ("id")); COMMENT ON COLUMN "performance_metrics"."type" IS '메트릭 타입'; COMMENT ON COLUMN "performance_metrics"."category" IS '메트릭 카테고리'; COMMENT ON COLUMN "performance_metrics"."resourceType" IS '리소스 타입 (travel, planet, message, file)'; COMMENT ON COLUMN "performance_metrics"."resourceId" IS '리소스 ID'; COMMENT ON COLUMN "performance_metrics"."value" IS '메트릭 값'; COMMENT ON COLUMN "performance_metrics"."unit" IS '메트릭 단위 (ms, MB, %, count 등)'; COMMENT ON COLUMN "performance_metrics"."metadata" IS '추가 메타데이터'; COMMENT ON COLUMN "performance_metrics"."createdAt" IS '메트릭 수집 시간'`);
        await queryRunner.query(`CREATE INDEX "IDX_2bef716900dbbccbd555e5c12b" ON "performance_metrics" ("resourceType", "resourceId", "createdAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_2125db1843eac07c93e51ffc44" ON "performance_metrics" ("category", "createdAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_4a6d170110f78c019d52a3a219" ON "performance_metrics" ("type", "createdAt") `);
        await queryRunner.query(`CREATE TYPE "public"."performance_alerts_metrictype_enum" AS ENUM('api_response_time', 'database_query_time', 'cache_hit_rate', 'file_upload_speed', 'file_download_speed', 'file_processing_time', 'websocket_connection', 'memory_usage', 'cpu_usage', 'disk_usage', 'error_rate', 'concurrent_users')`);
        await queryRunner.query(`CREATE TABLE "performance_alerts" ("id" SERIAL NOT NULL, "metricType" "public"."performance_alerts_metrictype_enum" NOT NULL, "severity" character varying(20) NOT NULL, "title" character varying(200) NOT NULL, "description" text NOT NULL, "threshold" numeric(10,4) NOT NULL, "currentValue" numeric(10,4) NOT NULL, "resourceType" character varying(50), "resourceId" bigint, "isResolved" boolean NOT NULL DEFAULT false, "resolvedAt" TIMESTAMP, "context" jsonb, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_b2c8afd8c56b21d899190efada5" PRIMARY KEY ("id")); COMMENT ON COLUMN "performance_alerts"."metricType" IS '관련 메트릭 타입'; COMMENT ON COLUMN "performance_alerts"."severity" IS '알람 심각도 (low, medium, high, critical)'; COMMENT ON COLUMN "performance_alerts"."title" IS '알람 제목'; COMMENT ON COLUMN "performance_alerts"."description" IS '알람 설명'; COMMENT ON COLUMN "performance_alerts"."threshold" IS '임계값'; COMMENT ON COLUMN "performance_alerts"."currentValue" IS '현재 값'; COMMENT ON COLUMN "performance_alerts"."resourceType" IS '관련 리소스 타입'; COMMENT ON COLUMN "performance_alerts"."resourceId" IS '관련 리소스 ID'; COMMENT ON COLUMN "performance_alerts"."isResolved" IS '해결 여부'; COMMENT ON COLUMN "performance_alerts"."resolvedAt" IS '해결 시간'; COMMENT ON COLUMN "performance_alerts"."context" IS '추가 컨텍스트 정보'; COMMENT ON COLUMN "performance_alerts"."createdAt" IS '알람 생성 시간'`);
        await queryRunner.query(`CREATE INDEX "IDX_98beeb207e1899f23889784fa0" ON "performance_alerts" ("severity", "createdAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_c97dc2425b67aca17c4a4aca94" ON "performance_alerts" ("isResolved", "createdAt") `);
        await queryRunner.query(`CREATE TYPE "public"."security_events_type_enum" AS ENUM('login_attempt', 'login_success', 'login_failure', 'permission_denied', 'rate_limit_exceeded', 'suspicious_activity', 'file_scan_threat', 'unauthorized_access', 'data_breach_attempt', 'brute_force_attack', 'malware_detected', 'spam_detected', 'ip_blocked', 'session_hijack', 'privilege_escalation')`);
        await queryRunner.query(`CREATE TYPE "public"."security_events_risklevel_enum" AS ENUM('low', 'medium', 'high', 'critical')`);
        await queryRunner.query(`CREATE TYPE "public"."security_events_status_enum" AS ENUM('detected', 'investigating', 'resolved', 'false_positive', 'ignored')`);
        await queryRunner.query(`CREATE TABLE "security_events" ("id" SERIAL NOT NULL, "type" "public"."security_events_type_enum" NOT NULL, "riskLevel" "public"."security_events_risklevel_enum" NOT NULL, "status" "public"."security_events_status_enum" NOT NULL DEFAULT 'detected', "title" character varying(200) NOT NULL, "description" text NOT NULL, "userId" bigint, "ipAddress" character varying(45), "userAgent" character varying(500), "requestUrl" character varying(100), "requestMethod" character varying(10), "resourceType" character varying(50), "resourceId" bigint, "fileName" character varying(100), "fileType" character varying(50), "fileSize" bigint, "metadata" jsonb, "detectionSource" character varying(100), "resolvedAt" TIMESTAMP, "resolvedBy" bigint, "resolutionNotes" text, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_6fc100d6700780737348df0d3ae" PRIMARY KEY ("id")); COMMENT ON COLUMN "security_events"."type" IS '보안 이벤트 타입'; COMMENT ON COLUMN "security_events"."riskLevel" IS '위험도 수준'; COMMENT ON COLUMN "security_events"."status" IS '이벤트 상태'; COMMENT ON COLUMN "security_events"."title" IS '이벤트 제목'; COMMENT ON COLUMN "security_events"."description" IS '이벤트 설명'; COMMENT ON COLUMN "security_events"."userId" IS '관련 사용자 ID'; COMMENT ON COLUMN "security_events"."ipAddress" IS 'IP 주소'; COMMENT ON COLUMN "security_events"."userAgent" IS 'User Agent'; COMMENT ON COLUMN "security_events"."requestUrl" IS '요청 URL'; COMMENT ON COLUMN "security_events"."requestMethod" IS 'HTTP 메서드'; COMMENT ON COLUMN "security_events"."resourceType" IS '리소스 타입 (travel, planet, message, file)'; COMMENT ON COLUMN "security_events"."resourceId" IS '리소스 ID'; COMMENT ON COLUMN "security_events"."fileName" IS '파일명 (파일 관련 이벤트)'; COMMENT ON COLUMN "security_events"."fileType" IS '파일 타입'; COMMENT ON COLUMN "security_events"."fileSize" IS '파일 크기 (바이트)'; COMMENT ON COLUMN "security_events"."metadata" IS '추가 메타데이터'; COMMENT ON COLUMN "security_events"."detectionSource" IS '탐지 규칙/소스'; COMMENT ON COLUMN "security_events"."resolvedAt" IS '해결 시간'; COMMENT ON COLUMN "security_events"."resolvedBy" IS '해결한 관리자 ID'; COMMENT ON COLUMN "security_events"."resolutionNotes" IS '해결 방법/노트'; COMMENT ON COLUMN "security_events"."createdAt" IS '이벤트 발생 시간'; COMMENT ON COLUMN "security_events"."updatedAt" IS '이벤트 정보 수정 시간'`);
        await queryRunner.query(`CREATE INDEX "IDX_f3e3edb95aee90264572beb037" ON "security_events" ("status", "createdAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_4d52eb18cb798b56183a5ba026" ON "security_events" ("ipAddress", "createdAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_9fbca62d08363c92a9d9b018e7" ON "security_events" ("userId", "createdAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_0f06b2b465fad556113072868c" ON "security_events" ("riskLevel", "createdAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_9f116fc4d9a5d4b71c9ef5fd75" ON "security_events" ("type", "createdAt") `);
        await queryRunner.query(`CREATE TYPE "public"."blocked_ips_risklevel_enum" AS ENUM('low', 'medium', 'high', 'critical')`);
        await queryRunner.query(`CREATE TABLE "blocked_ips" ("id" SERIAL NOT NULL, "ipAddress" character varying(45) NOT NULL, "reason" character varying(100) NOT NULL, "riskLevel" "public"."blocked_ips_risklevel_enum" NOT NULL, "isActive" boolean NOT NULL DEFAULT true, "blockedUntil" TIMESTAMP, "blockedBy" bigint, "blockCount" bigint NOT NULL DEFAULT '1', "lastViolationAt" TIMESTAMP, "metadata" jsonb, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_fac0434f296f6ea4c7c9328ac70" UNIQUE ("ipAddress"), CONSTRAINT "PK_e86c3986ac081ad24d5443bb6c5" PRIMARY KEY ("id")); COMMENT ON COLUMN "blocked_ips"."ipAddress" IS 'IP 주소'; COMMENT ON COLUMN "blocked_ips"."reason" IS '차단 사유'; COMMENT ON COLUMN "blocked_ips"."riskLevel" IS '위험도 수준'; COMMENT ON COLUMN "blocked_ips"."isActive" IS '차단 활성 상태'; COMMENT ON COLUMN "blocked_ips"."blockedUntil" IS '차단 해제 시간 (null이면 영구)'; COMMENT ON COLUMN "blocked_ips"."blockedBy" IS '차단한 관리자 ID'; COMMENT ON COLUMN "blocked_ips"."blockCount" IS '차단 횟수'; COMMENT ON COLUMN "blocked_ips"."lastViolationAt" IS '마지막 위반 시간'; COMMENT ON COLUMN "blocked_ips"."metadata" IS '추가 메타데이터'; COMMENT ON COLUMN "blocked_ips"."createdAt" IS '최초 차단 시간'; COMMENT ON COLUMN "blocked_ips"."updatedAt" IS '차단 정보 수정 시간'`);
        await queryRunner.query(`CREATE INDEX "IDX_47cc1acf1ebcf1339703ce5ff6" ON "blocked_ips" ("blockedUntil") `);
        await queryRunner.query(`CREATE INDEX "IDX_a51f029a276f27bfe2aa5f45eb" ON "blocked_ips" ("ipAddress", "isActive") `);
        await queryRunner.query(`CREATE TYPE "public"."file_scan_results_threatlevel_enum" AS ENUM('low', 'medium', 'high', 'critical')`);
        await queryRunner.query(`CREATE TABLE "file_scan_results" ("id" SERIAL NOT NULL, "fileHash" character varying(64) NOT NULL, "fileName" character varying(200) NOT NULL, "mimeType" character varying(100) NOT NULL, "fileSize" bigint NOT NULL, "scanStatus" character varying(20) NOT NULL DEFAULT 'pending', "threatLevel" "public"."file_scan_results_threatlevel_enum", "isMalicious" boolean NOT NULL DEFAULT false, "isSpam" boolean NOT NULL DEFAULT false, "scanResults" json, "uploadedBy" bigint, "uploadIp" character varying(45), "storageKey" character varying(200), "scanStartedAt" TIMESTAMP, "scanCompletedAt" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_69eda00f3412cc18e0c29087d53" PRIMARY KEY ("id")); COMMENT ON COLUMN "file_scan_results"."fileHash" IS '파일 해시 (SHA-256)'; COMMENT ON COLUMN "file_scan_results"."fileName" IS '파일명'; COMMENT ON COLUMN "file_scan_results"."mimeType" IS '파일 MIME 타입'; COMMENT ON COLUMN "file_scan_results"."fileSize" IS '파일 크기 (바이트)'; COMMENT ON COLUMN "file_scan_results"."scanStatus" IS '스캔 상태 (pending, scanning, completed, failed)'; COMMENT ON COLUMN "file_scan_results"."threatLevel" IS '위협 수준'; COMMENT ON COLUMN "file_scan_results"."isMalicious" IS '악성 코드 탐지 여부'; COMMENT ON COLUMN "file_scan_results"."isSpam" IS '스팸 탐지 여부'; COMMENT ON COLUMN "file_scan_results"."scanResults" IS '스캔 엔진 결과'; COMMENT ON COLUMN "file_scan_results"."uploadedBy" IS '업로드한 사용자 ID'; COMMENT ON COLUMN "file_scan_results"."uploadIp" IS '업로드 IP 주소'; COMMENT ON COLUMN "file_scan_results"."storageKey" IS '스토리지 키'; COMMENT ON COLUMN "file_scan_results"."scanStartedAt" IS '스캔 시작 시간'; COMMENT ON COLUMN "file_scan_results"."scanCompletedAt" IS '스캔 완료 시간'; COMMENT ON COLUMN "file_scan_results"."createdAt" IS '스캔 요청 시간'; COMMENT ON COLUMN "file_scan_results"."updatedAt" IS '스캔 결과 수정 시간'`);
        await queryRunner.query(`CREATE INDEX "IDX_b5d15fe035bac2ad94309fb197" ON "file_scan_results" ("threatLevel", "createdAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_d6d9a00c97d66c1a19002c7f3c" ON "file_scan_results" ("scanStatus", "createdAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_756bc06193e427679971a1b753" ON "file_scan_results" ("fileHash") `);
        await queryRunner.query(`ALTER TABLE "notifications" ADD CONSTRAINT "FK_692a909ee0fa9383e7859f9b406" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "notifications" ADD CONSTRAINT "FK_357d60c1b7e4a2e9466d6ff356d" FOREIGN KEY ("travelId") REFERENCES "travels"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "notifications" ADD CONSTRAINT "FK_0c92fb969e67cbf7208462ebc04" FOREIGN KEY ("planetId") REFERENCES "planets"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "notifications" ADD CONSTRAINT "FK_7dca5807b6d8c844cfc9f93ce08" FOREIGN KEY ("triggeredBy") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "notifications" DROP CONSTRAINT "FK_7dca5807b6d8c844cfc9f93ce08"`);
        await queryRunner.query(`ALTER TABLE "notifications" DROP CONSTRAINT "FK_0c92fb969e67cbf7208462ebc04"`);
        await queryRunner.query(`ALTER TABLE "notifications" DROP CONSTRAINT "FK_357d60c1b7e4a2e9466d6ff356d"`);
        await queryRunner.query(`ALTER TABLE "notifications" DROP CONSTRAINT "FK_692a909ee0fa9383e7859f9b406"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_756bc06193e427679971a1b753"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_d6d9a00c97d66c1a19002c7f3c"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_b5d15fe035bac2ad94309fb197"`);
        await queryRunner.query(`DROP TABLE "file_scan_results"`);
        await queryRunner.query(`DROP TYPE "public"."file_scan_results_threatlevel_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_a51f029a276f27bfe2aa5f45eb"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_47cc1acf1ebcf1339703ce5ff6"`);
        await queryRunner.query(`DROP TABLE "blocked_ips"`);
        await queryRunner.query(`DROP TYPE "public"."blocked_ips_risklevel_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_9f116fc4d9a5d4b71c9ef5fd75"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_0f06b2b465fad556113072868c"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_9fbca62d08363c92a9d9b018e7"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_4d52eb18cb798b56183a5ba026"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f3e3edb95aee90264572beb037"`);
        await queryRunner.query(`DROP TABLE "security_events"`);
        await queryRunner.query(`DROP TYPE "public"."security_events_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."security_events_risklevel_enum"`);
        await queryRunner.query(`DROP TYPE "public"."security_events_type_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_c97dc2425b67aca17c4a4aca94"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_98beeb207e1899f23889784fa0"`);
        await queryRunner.query(`DROP TABLE "performance_alerts"`);
        await queryRunner.query(`DROP TYPE "public"."performance_alerts_metrictype_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_4a6d170110f78c019d52a3a219"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_2125db1843eac07c93e51ffc44"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_2bef716900dbbccbd555e5c12b"`);
        await queryRunner.query(`DROP TABLE "performance_metrics"`);
        await queryRunner.query(`DROP TYPE "public"."performance_metrics_category_enum"`);
        await queryRunner.query(`DROP TYPE "public"."performance_metrics_type_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_692a909ee0fa9383e7859f9b40"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_aef1c7aef3725068e5540f8f00"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_92f5d3a7779be163cbea7916c6"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_1d992705797d7d2d5a3853ad9c"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_8ba28344602d583583b9ea1a50"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_831a5a06f879fb0bebf8965871"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_b3bff6ef995abfa317b8ec8699"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_5340fc241f57310d243e5ab20b"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_78207b2dc2b0d717649e89d3fc"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_8cfc4757bd393ac9aec5dde530"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ab221329a9f4c2111690d52f34"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_3363924e627d40f4b945c3276f"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_5d06d6169ad1f3d8f83d63902b"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_b3bff6ef995abfa317b8ec8699"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_0c92fb969e67cbf7208462ebc0"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_357d60c1b7e4a2e9466d6ff356"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_8ba28344602d583583b9ea1a50"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_aef1c7aef3725068e5540f8f00"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_692a909ee0fa9383e7859f9b40"`);
        await queryRunner.query(`DROP TABLE "notifications"`);
        await queryRunner.query(`DROP TYPE "public"."notifications_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."notifications_priority_enum"`);
        await queryRunner.query(`DROP TYPE "public"."notifications_type_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_2de1d3124c07ed32d4c9e0c2a6"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_aabb82adb6a7a3163667b5b486"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_7f7b67c0ae5e101b71e86a0cf5"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_19da8ae5e50dce0825eeaf1d1f"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_a8d9e131a97cc6e9d00979720c"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_efb0bbda7c7b63593f3b65db2d"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_7ddb1767051ba238bb698c3e08"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_19da8ae5e50dce0825eeaf1d1f"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_7ed6d4b0e2e5467752cb14a44d"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_0f60eaca1334fca31ef3c28588"`);
        await queryRunner.query(`DROP TABLE "analytics"`);
        await queryRunner.query(`DROP TYPE "public"."analytics_period_enum"`);
        await queryRunner.query(`DROP TYPE "public"."analytics_type_enum"`);
    }

}
